package org.jbpm.datamodeler.codegen.parser.test;

import org.jbpm.datamodeler.annotations.*;
import java.io.Serializable;
import java.util.Date;

import org.jbpm.datamodeler.core.DataObject;


import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * Test generics class
 *
 * This class was intended for testing purposes.
 * Please don't modify this class unless you modify also the TestGenerics class.
 * given test result can change.
 */

@TestMarkerAnnotation
@TestValueAnnotation("nothing")
public class TestGenerics extends org.jbpm.datamodeler.TestBase {

    TestGenerics() {

    }

    public List<Element> elements;

    private List<String> names = new ArrayList<String>();

    //blanc spaces are removed when the class is parsed
    protected Map<   String, List<Integer >   > listMap = new HashMap<String, List<Integer>>();

    Map<Collection<DataObject>, List<Integer>> listMap1 = new HashMap<Collection<DataObject>, List<Integer>>();

    @Equals
    Map<Collection<DataObject>, List<Integer>> listMap2 = new HashMap<Collection<DataObject>, List<Integer>>();


    Map<java.util.Collection < invented.DataObject>, List<Integer>> listMap3 = new HashMap<Collection<invented.DataObject>, List<Integer>>();

    void doSomething() {

    }

}